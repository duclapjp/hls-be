<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.cnctor.hls.domain.repository.amountgroup.AmountGroupRepository">

	<resultMap id="amountGroupResultMap" type="AmountGroup">
		<id property="amountGroupId" column="amount_group_id" />
		<result property="amountGroupNo" column="amount_group_no" />
		<result property="storeId" column="store_id" />
		<result property="amountGroupName" column="amount_group_name" />
		<result property="enable" column="enable" />
		<result property="createdDate" column="created_date" />
		<result property="updatedTime" column="updated_time" />
		<result property="accountId" column="account_id" />
		<result property="displayName" column="displayName" />
	</resultMap>

	<resultMap id="amountGroupResultMap2" type="AmountGroup">
		<id property="amountGroupId" column="amount_group_id" />
		<result property="amountGroupNo" column="amount_group_no" />
		<result property="storeId" column="store_id" />
		<result property="amountGroupName" column="amount_group_name" />
		<result property="enable" column="enable" />
		<result property="createdDate" column="created_date" />
		<result property="updatedTime" column="updated_time" />
		<result property="accountId" column="account_id" />
		<result property="displayName" column="displayName" />

		<collection property="amountGroupRanks"
			select="fetchAmountGroupRankQuery" column="amount_group_id"
			ofType="AmountGroupRank" fetchType="lazy"></collection>

	</resultMap>

	<resultMap id="amountGroupRankResultMap"
		type="AmountGroupRank">
		<id property="amountGroupId" column="amount_group_id" />
		<id property="amountRankId" column="amount_rank_id" />
		<result property="amountRankName" column="amountRankName" />

		<result property="amounts" column="amounts" />
	</resultMap>

	<select id="fetchAmountGroupRankQuery"
		resultType="AmountGroupRank">
		SELECT
		agr.*,
		ar.amount_rank_name as amountRankName

		FROM
		public.amount_group_rank agr

		LEFT JOIN
		public.amount_rank ar
		ON
		agr.amount_rank_id = ar.amount_rank_id

		WHERE
		agr.amount_group_id=#{amountGroupId}
		ORDER BY amount_rank_id
	</select>

	<insert id="insert" parameterType="AmountGroup">
		<selectKey keyProperty="amountGroupId" resultType="long"
			order="BEFORE">
			SELECT nextval('public."SEQ_AMOUNT_GROUP"') AS amountGroupId
		</selectKey>

		INSERT INTO
		public.amount_group
		(
		amount_group_id,
		amount_group_no,
		store_id,
		total_people,
		amount_group_name,
		enable,
		created_date,
		updated_time,
		account_id
		)
		VALUES
		(
		#{amountGroupId},
		(SELECT MAX(amount_group_no)+1
		FROM public.amount_group
		WHERE store_id = #{storeId} ),
		#{storeId},
		#{totalPeople},
		#{amountGroupName},
		#{enable},
		NOW(),
		NOW(),
		#{accountId}
		)
	</insert>

	<update id="update" parameterType="AmountGroup">
		UPDATE
		public.amount_group

		SET
		amount_group_name=#{amountGroupName},
		<if test="amountGroupNo != null and amountGroupNo != ''">
			amount_group_no=#{amountGroupNo},
		</if>
		enable=#{enable},
		total_people = #{totalPeople},
		updated_time= NOW()
		WHERE
		amount_group_id = #{amountGroupId}
	</update>

	<delete id="delete" parameterType="java.util.List">
		DELETE
		FROM public.amount_group

		WHERE
		store_id = #{storeId}

		<if test="amountGroupIds != null and amountGroupIds.size > 0">
			AND amount_group_id NOT IN
			<foreach item="id" collection="amountGroupIds" open="("
				separator="," close=")"> #{id} </foreach>
		</if>
	</delete>

	<select id="findAmountGroups" parameterType="Long"
		resultMap="amountGroupResultMap">
		SELECT
		ag.amount_group_id,
		ag.amount_group_no,
		ag.amount_group_name,
		ag.total_people,
		ag.enable,
		ag.created_date,
		ag.updated_time,
		ag.account_id,
		a.display_name as displayName

		FROM
		public.amount_group ag
		LEFT JOIN
		public.account a
		ON ag.account_id = a.account_id

		WHERE ag.store_id = #{storeId}

		ORDER BY ag.amount_group_no ASC
	</select>

	<select id="getById" parameterType="Long"
		resultMap="amountGroupResultMap2">
		SELECT
		ag.amount_group_id,
		ag.amount_group_no,
		ag.amount_group_name,
		ag.store_id,
		ag.total_people,
		ag.enable,
		ag.created_date,
		ag.updated_time,
		ag.account_id

		FROM
		public.amount_group ag

		WHERE
		ag.amount_group_id = #{amountGroupId};
	</select>

	<insert id="upsertAmountGroupRank"
		parameterType="AmountGroupRank">

		INSERT INTO

		public.amount_group_rank

		(
		amount_group_id,
		amount_rank_id,
		amounts
		)

		VALUES

		(
		#{amountGroupRank.amountGroupId},
		#{amountGroupRank.amountRankId},
		#{amountGroupRank.amounts}
		)

		ON CONFLICT (amount_group_id, amount_rank_id)
		DO UPDATE SET
		amounts=#{amountGroupRank.amounts}

	</insert>
</mapper>
